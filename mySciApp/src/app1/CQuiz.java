/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app1;
//

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author x14110784
 */
public class CQuiz extends javax.swing.JFrame {

    //call instance of 
    DummyAnswers dA = new DummyAnswers();

    //declare arrays and variables
    private ArrayList<String> wrongAns;
    private ArrayList<String> wrongAns2;
    private ArrayList<String> answers;
    private ArrayList<String> questions;
    private ArrayList<String> userAnswers;
    private ArrayList<Integer> marks;
    private int sum;
    private int total;

    private int count;
    private String name;
    private String printableTotal;
    private int mark;
    private String subj;

    /**
     * Creates new form CQuiz
     */
    public CQuiz() {
        initComponents();
        //tell frame what to initialize on load
        //create arrays and assign values to variables
        //populate arrays 

        subj = "Chemistry";
        //Enter your name
        name = JOptionPane.showInputDialog("Please enter name");
        //call method from DummyAnswers.java class
        dA.fillerAnswers();

        btnQ3Q4.setEnabled(false);
        btnQ5Q6.setEnabled(false);
        btnQ7Q8.setEnabled(false);
        btnSubmit.setEnabled(false);

        lblRunninglTotal.setText("Your grade is" + total + "/100");
        // call array from DummyAnswers class
        wrongAns = dA.getDumQuest();
        wrongAns2 = dA.getDumQuest2();
        answers = new ArrayList<>();
        questions = new ArrayList<>();
        userAnswers = new ArrayList<>();
        marks = new ArrayList<>();

        String q1 = "Q1:The nucleus of an atom consists of?";
        String q2 = "Q2:The number of moles of solute present in 1 kg of a solvent is called its?";
        String q3 = "Q3:The most electronegative element among the following is?";
        String q4 = "Q4:The metal used to recover copper from a solution of copper sulphate is?";
        String q5 = "Q5:The number of d-electrons in Fe2+ (Z = 26) is not equal to that of?";
        String q6 = "Q6:The metallurgical process in which a metal is obtained in a fused state is called?";
        String q7 = "Q7:The molecules of which gas have highest speed?";
        String q8 = "Q8:The oldest rocks in the earth's crust were once molten, and came from deep inside the earth?";
        String q9 = "Q9:The law which states that the amount of gas dissolved in a liquid?";
        String q10 = "Q10:The main buffer system of the human blood is?";

        String a1 = "protons and neutrons";
        String a2 = "molality";
        String a3 = "fluorine";
        String a4 = "Fe";
        String a5 = "p-electrons in CI(Z = 17)";
        String a6 = "smelting";
        String a7 = "H2 at -73oC";
        String a8 = "igneous rocks";
        String a9 = "Henry's law";
        String a10 = "H2CO3 - HCO3";

        questions.add(q1);
        questions.add(q2);
        questions.add(q3);
        questions.add(q4);
        questions.add(q5);
        questions.add(q6);
        questions.add(q7);
        questions.add(q8);
        questions.add(q9);
        questions.add(q10);

        answers.add(a1);
        answers.add(a2);
        answers.add(a3);
        answers.add(a4);
        answers.add(a5);
        answers.add(a6);
        answers.add(a7);
        answers.add(a8);
        answers.add(a9);
        answers.add(a10);

        count = 0;

        lblQ1.setText(questions.get(0));
        rbG1A.setText(answers.get(0));
        rbG1B.setText(wrongAns.get(0));
        rbG1C.setText(wrongAns2.get(0));
        lblQ2.setText(questions.get(1));
        rbG2A.setText(answers.get(1));
        rbG2B.setText(wrongAns.get(1));
        rbG2C.setText(wrongAns2.get(1));

        sum = 0;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnG1 = new javax.swing.ButtonGroup();
        btnG2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblQ1 = new javax.swing.JLabel();
        rbG1A = new javax.swing.JRadioButton();
        rbG1B = new javax.swing.JRadioButton();
        rbG1C = new javax.swing.JRadioButton();
        lblQ2 = new javax.swing.JLabel();
        rbG2A = new javax.swing.JRadioButton();
        rbG2B = new javax.swing.JRadioButton();
        rbG2C = new javax.swing.JRadioButton();
        btnSubmit = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnQ1Q2 = new javax.swing.JButton();
        btnQ3Q4 = new javax.swing.JButton();
        btnQ5Q6 = new javax.swing.JButton();
        btnQ7Q8 = new javax.swing.JButton();
        lblRunninglTotal = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuReturn = new javax.swing.JMenuItem();
        mnuHome = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mnuExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chemistry Quiz (Evan)");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Chemistry Quiz");

        lblQ1.setText("Q1: What is the Symbol for element egg?");

        btnG1.add(rbG1A);
        rbG1A.setText("PH");

        btnG1.add(rbG1B);
        rbG1B.setText("GH");

        btnG1.add(rbG1C);
        rbG1C.setText("EG");

        lblQ2.setText("Q2: What is the Symbol for element egg?");

        btnG2.add(rbG2A);
        rbG2A.setText("PH");

        btnG2.add(rbG2B);
        rbG2B.setText("GH");

        btnG2.add(rbG2C);
        rbG2C.setText("EG");

        btnSubmit.setForeground(new java.awt.Color(102, 102, 255));
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnReset.setForeground(new java.awt.Color(255, 0, 51));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnQ1Q2.setText("Submit Q1 & Q2");
        btnQ1Q2.setOpaque(false);
        btnQ1Q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQ1Q2ActionPerformed(evt);
            }
        });

        btnQ3Q4.setText("Submit Q3 & Q4");
        btnQ3Q4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQ3Q4ActionPerformed(evt);
            }
        });

        btnQ5Q6.setText("Submit Q5 & Q6");
        btnQ5Q6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQ5Q6ActionPerformed(evt);
            }
        });

        btnQ7Q8.setText("Submit Q7 & Q8");
        btnQ7Q8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQ7Q8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbG2A)
                            .addComponent(rbG2B)
                            .addComponent(rbG2C)
                            .addComponent(rbG1C)
                            .addComponent(rbG1B)
                            .addComponent(rbG1A)
                            .addComponent(lblQ1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblQ2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblRunninglTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnQ1Q2)
                        .addGap(18, 18, 18)
                        .addComponent(btnQ3Q4)
                        .addGap(18, 18, 18)
                        .addComponent(btnQ5Q6)
                        .addGap(18, 18, 18)
                        .addComponent(btnQ7Q8)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(228, 228, 228)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(lblQ1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbG1A)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbG1B)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbG1C)
                .addGap(66, 66, 66)
                .addComponent(lblQ2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbG2A)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbG2B)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbG2C))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblRunninglTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btnSubmit)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQ1Q2)
                    .addComponent(btnQ3Q4)
                    .addComponent(btnQ5Q6)
                    .addComponent(btnQ7Q8)
                    .addComponent(btnReset))
                .addContainerGap())
        );

        jMenu1.setText("Go Back");

        mnuReturn.setText("Return to Chemistry");
        mnuReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuReturnActionPerformed(evt);
            }
        });
        jMenu1.add(mnuReturn);

        mnuHome.setText("Main Menu");
        mnuHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuHomeActionPerformed(evt);
            }
        });
        jMenu1.add(mnuHome);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Exit");

        mnuExit.setText("Save & Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        jMenu2.add(mnuExit);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        //closes frame
        this.dispose();
    }//GEN-LAST:event_mnuExitActionPerformed

    private void mnuReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuReturnActionPerformed
        //opens new frame closes current
        new Chemist().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_mnuReturnActionPerformed

    private void mnuHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuHomeActionPerformed
        //opens new frame closes current
        new appFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_mnuHomeActionPerformed

    private void btnQ1Q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQ1Q2ActionPerformed
        //issues trying to toal up marks from arraylist as it is type Integer 
        //Arraylist cannot be int as is a primitive and Arraylist holds objects

        //when button is pressed set the following values
        lblQ1.setText(questions.get(0));
        lblQ2.setText(questions.get(1));
        rbG1A.setText(answers.get(0));
        rbG1B.setText(wrongAns.get(0));
        rbG1C.setText(wrongAns2.get(0));
        rbG2A.setText(answers.get(1));
        rbG2B.setText(wrongAns.get(1));
        rbG2C.setText(wrongAns2.get(1));

        //if statement checks to see if the correct answer is selected
        //assigns marks/score accordingly
        if (rbG1A.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2B.isSelected()) {
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2C.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1B.isSelected() && rbG2C.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1C.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2C.isSelected()) {

        }
        if (btnG1.isSelected(null) || btnG2.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please check all radio buttons");
        } else {
            lblQ1.setText(questions.get(2));
            lblQ2.setText(questions.get(3));
            rbG1A.setText(answers.get(2));
            rbG1B.setText(wrongAns.get(2));
            rbG1C.setText(wrongAns2.get(2));
            rbG2A.setText(answers.get(3));
            rbG2B.setText(wrongAns.get(3));
            rbG2C.setText(wrongAns2.get(3));
            btnG1.clearSelection();
            btnG2.clearSelection();

            btnQ1Q2.setBackground(Color.red);
            btnQ1Q2.setEnabled(false);
            btnQ3Q4.setEnabled(true);
            btnQ5Q6.setEnabled(false);
            btnQ7Q8.setEnabled(false);
            btnSubmit.setEnabled(false);

            lblRunninglTotal.setText("Your grade is" + total + "/100");

            //JOptionPane.showMessageDialog(null, marks.size()+"/2");
        }


    }//GEN-LAST:event_btnQ1Q2ActionPerformed

    private void btnQ3Q4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQ3Q4ActionPerformed

        //set questions and answers for first two questions 
        lblQ1.setText(questions.get(2));
        lblQ2.setText(questions.get(3));
        rbG1A.setText(answers.get(2));
        rbG1B.setText(wrongAns.get(2));
        rbG1C.setText(wrongAns2.get(2));
        rbG2A.setText(answers.get(3));
        rbG2B.setText(wrongAns.get(3));
        rbG2C.setText(wrongAns2.get(3));

        //if statement checks to see if the correct answer is selected
        //assigns marks/score accordingly
        if (rbG1A.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2B.isSelected()) {
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2C.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1B.isSelected() && rbG2C.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1C.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2C.isSelected()) {

        }

        //for (int i = 0;i<marks.size(); i++){
        //total +=(marks.get(i));
        //}
        //some validation to ensure all buttons are checked
        if (btnG1.isSelected(null) || btnG2.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please check all radio buttons");
        } else {
            lblQ1.setText(questions.get(4));
            lblQ2.setText(questions.get(5));
            rbG1A.setText(answers.get(4));
            rbG1B.setText(wrongAns.get(4));
            rbG1C.setText(wrongAns2.get(4));
            rbG2A.setText(answers.get(5));
            rbG2B.setText(wrongAns.get(5));
            rbG2C.setText(wrongAns2.get(5));
            btnG1.clearSelection();
            btnG2.clearSelection();

            btnQ3Q4.setBackground(Color.red);
            btnQ3Q4.setEnabled(false);
            btnQ5Q6.setEnabled(true);

            lblRunninglTotal.setText("Your grade is" + total + "/100");

            //JOptionPane.showMessageDialog(null, marks.size()+"/4");
        }


    }//GEN-LAST:event_btnQ3Q4ActionPerformed

    private void btnQ5Q6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQ5Q6ActionPerformed

        lblQ1.setText(questions.get(4));
        lblQ2.setText(questions.get(5));
        rbG1A.setText(answers.get(4));
        rbG1B.setText(wrongAns.get(4));
        rbG1C.setText(wrongAns2.get(4));
        rbG2A.setText(answers.get(5));
        rbG2B.setText(wrongAns.get(5));
        rbG2C.setText(wrongAns2.get(5));

        /*String right1;
         String right2;
         right1= rbG1A.getText().toLowerCase();
         right2= rbG2A.getText().toLowerCase();
         if(right1.equals("p-electrons in CI(Z = 17)") && right2.equals("smelting") ){
         marks.add(10);
         marks.add(10);
         }*/
        //if statement checks to see if the correct answer is selected
        //assigns marks/score accordingly
        if (rbG1A.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2B.isSelected()) {
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2C.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1B.isSelected() && rbG2C.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1C.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2C.isSelected()) {

        }
        //for (int i = 0;i<marks.size(); i++){
        //total +=(marks.get(i));
        //}

        if (btnG1.isSelected(null) || btnG2.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please check all radio buttons");
        } else {
            lblQ1.setText(questions.get(6));
            lblQ2.setText(questions.get(7));
            rbG1A.setText(answers.get(6));
            rbG1B.setText(wrongAns.get(6));
            rbG1C.setText(wrongAns2.get(6));
            rbG2A.setText(answers.get(7));
            rbG2B.setText(wrongAns.get(7));
            rbG2C.setText(wrongAns2.get(7));
            btnG1.clearSelection();
            btnG2.clearSelection();

            btnQ5Q6.setBackground(Color.red);
            btnQ5Q6.setEnabled(false);
            btnQ7Q8.setEnabled(true);

            lblRunninglTotal.setText("Your grade is" + total + "/100");

            //JOptionPane.showMessageDialog(null, marks.size()+"/6");
        }

    }//GEN-LAST:event_btnQ5Q6ActionPerformed

    @SuppressWarnings("empty-statement")
    private void btnQ7Q8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQ7Q8ActionPerformed

        lblQ1.setText(questions.get(6));
        lblQ2.setText(questions.get(7));
        rbG1A.setText(answers.get(6));
        rbG1B.setText(wrongAns.get(6));
        rbG1C.setText(wrongAns2.get(6));
        rbG2A.setText(answers.get(7));
        rbG2B.setText(wrongAns.get(7));
        rbG2C.setText(wrongAns2.get(7));

        /*String right1;
         String right2;
         right1= rbG1A.getText().toLowerCase();
         right2= rbG2A.getText().toLowerCase();
         if(right1.equals("H2 at -73oC") && right2.equals("igneous rocks") ){
         marks.add(10);
         marks.add(10);
         }*/
        //if statement checks to see if the correct answer is selected
        //assigns marks/score accordingly
        if (rbG1A.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2B.isSelected()) {
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2C.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1B.isSelected() && rbG2C.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1C.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2C.isSelected()) {

        }
        //for (int i = 0;i<marks.size(); i++){
        //total +=(marks.get(i));
        //}

        if (btnG1.isSelected(null) || btnG2.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please check all radio buttons");
        } else {
            lblQ1.setText(questions.get(8));
            lblQ2.setText(questions.get(9));
            rbG1A.setText(answers.get(8));
            rbG1B.setText(wrongAns.get(8));
            rbG1C.setText(wrongAns2.get(8));
            rbG2A.setText(answers.get(9));
            rbG2B.setText(wrongAns.get(9));
            rbG2C.setText(wrongAns2.get(9));
            btnG1.clearSelection();
            btnG2.clearSelection();

            //btnQ7Q8.setBackground(Color.red);
            btnQ7Q8.setEnabled(false);
            btnSubmit.setEnabled(true);

            lblRunninglTotal.setText("Your grade is" + total + "/100");

            //JOptionPane.showMessageDialog(null, marks.size()+"/8");
        }
        if (btnG1.isSelected(null) && btnG2.isSelected(null));
        btnSubmit.setText("Submit");


    }//GEN-LAST:event_btnQ7Q8ActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        /*btnG1.clearSelection();
         btnG2.clearSelection();
         lblQ1.setText(questions.get(0));
         lblQ2.setText(questions.get(1));
         rbG1A.setText(answers.get(0));
         rbG1B.setText(dumyAns.get(0));
         rbG1C.setText(dumyAns2.get(0));
         rbG2A.setText(answers.get(1));
         rbG2B.setText(dumyAns.get(1));
         rbG2C.setText(dumyAns2.get(1));
         btnQ1Q2.setBackground(Color.gray);
         btnQ3Q4.setBackground(Color.gray);
         btnQ5Q6.setBackground(Color.gray);
         btnQ7Q8.setBackground(Color.gray);
         lblRunninglTotal.setText("Your grade is 0/100");*/

        new CQuiz().setVisible(true);
        this.dispose();


    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed

        lblQ1.setText(questions.get(8));
        lblQ2.setText(questions.get(9));
        rbG1A.setText(answers.get(8));
        rbG1B.setText(wrongAns.get(8));
        rbG1C.setText(wrongAns2.get(8));
        rbG2A.setText(answers.get(9));
        rbG2B.setText(wrongAns.get(9));
        rbG2C.setText(wrongAns2.get(9));

        //if statement checks to see if the correct answer is selected
        //assigns marks/score accordingly
        if (rbG1A.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2B.isSelected()) {
            marks.add(10);
        } else if (rbG1A.isSelected() && rbG2C.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1B.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1B.isSelected() && rbG2C.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2A.isSelected()) {
            marks.add(10);
        } else if (rbG1C.isSelected() && rbG2B.isSelected()) {

        } else if (rbG1C.isSelected() && rbG2C.isSelected()) {

        }
        for (int i = 0; i < marks.size(); i++) {
            total += (marks.get(i));
        }

        if (btnG1.isSelected(null) || btnG2.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please check all radio buttons");
        } else {

            lblRunninglTotal.setText("Your grade is" + total + "/100");

            JOptionPane.showMessageDialog(null, "your total is" + marks.size() + "/10");
            JOptionPane.showMessageDialog(null, "your score was" + total + "/100");
            btnSubmit.setEnabled(false);

            //had to change integer to String for writing to file
            printableTotal = Integer.toString(total);
            total = mark;

            //Call on class FileIO.java
            FileIO f = new FileIO(name, mark, subj);
            //set the values to the FileIO class
            f.setName(name);
            f.setMarks(mark);
            f.setSubj(subj);

        }
        FileIO fi = new FileIO(name, mark, subj);
        //File IO  write name, subject and mark to the file progress.txt
        //Try catch with exception to catch in case of an error 
        try {
            File f = new File("progress.txt");
            FileWriter fw = new FileWriter(f);
            BufferedWriter bWrite = new BufferedWriter(fw);

            bWrite.write("Your Subject: " + fi.getSubj() + ".   ");
            bWrite.write("Your Name: " + fi.getName() + ".   ");
            //bWrite.newLine();
            bWrite.write("Your Score: " + printableTotal + "/100" + ".  ");
            bWrite.close();
            JOptionPane.showMessageDialog(null, "Hi " + name + " Your Score and Has been saved to 'your progress' page ");

        } catch (IOException e) {
            System.out.println(e.toString());
            System.out.println("Problem writing to File");
        }
        //automatically open up stats frame to check file reading
        this.dispose();
        new CStats().setVisible(true);

    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnG1;
    private javax.swing.ButtonGroup btnG2;
    private javax.swing.JButton btnQ1Q2;
    private javax.swing.JButton btnQ3Q4;
    private javax.swing.JButton btnQ5Q6;
    private javax.swing.JButton btnQ7Q8;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblQ1;
    private javax.swing.JLabel lblQ2;
    private javax.swing.JLabel lblRunninglTotal;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenuItem mnuHome;
    private javax.swing.JMenuItem mnuReturn;
    private javax.swing.JRadioButton rbG1A;
    private javax.swing.JRadioButton rbG1B;
    private javax.swing.JRadioButton rbG1C;
    private javax.swing.JRadioButton rbG2A;
    private javax.swing.JRadioButton rbG2B;
    private javax.swing.JRadioButton rbG2C;
    // End of variables declaration//GEN-END:variables
}
